version: '3'

services:
  jenkins-docker:
    image: docker:dind
    restart: always
    privileged: true
    networks:
      jenkins:
        aliases:
          - docker
    environment:
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_LAUNCH_DIAGNOSTICS=true
    volumes:
      - jenkins-docker-certs:/certs/client
    ports:
      - "2376:2376"
    extra_hosts:
      - "docker:172.0.0.11"
  jenkins:
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: on-failure
    networks:
      - jenkins
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
      - ./jenkins.yaml:/var/jenkins_home/casc_configs/jenkins.yaml
  sonarqube:
    image: sonarqube:latest
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonarqube
      - SONAR_JDBC_PASSWORD=sonarqube
      - SONAR_AUTH_JWTBASE64HS256SECRET=Jc88RMjzkxPoy/fCPiL+iy7osojuUgawpjl1g6H38O8=
    networks:
      - jenkins
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - sonarqube-db
  sonarqube-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
    ports:
      - "5432:5432"
    networks:
      - jenkins
networks:
  jenkins:
    driver: bridge
volumes:
  jenkins-data:
  jenkins-docker-certs:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
